name: CMake Build

on: [push]

jobs:
  linux_ubuntu:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory.
        # We'll use this as our working directory for all subsequent commands.
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable access regardless of the host operating system.
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source and build directories,
        # but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          cmake "$GITHUB_WORKSPACE" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTING=ON \
            -DCMAKE_C_COMPILER=gcc-14 \
            -DCMAKE_CXX_COMPILER=g++-14

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.
        # You can specify a specific target with "--target <NAME>".
        run: cmake --build . --config Release

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail.
        run: ctest -C Release --verbose

  windows:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory.
        # We'll use this as our working directory for all subsequent commands.
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: pwsh
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source and build directories,
        # but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          cmake "${env:GITHUB_WORKSPACE}" `
            -DCMAKE_BUILD_TYPE=Release `
            -DBUILD_TESTING=ON `
            -G "Visual Studio 17 2022" -A x64

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: pwsh
        # Execute the build.
        # You can specify a specific target with "--target <NAME>".
        run: cmake --build . --config Release

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: pwsh
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail.
        run: ctest -C Release
